name: 'Build Client'
description: 'Builds the client application'
runs:
  using: 'composite'
  steps:
  - name: Cache client npm dependencies
    uses: actions/cache@v4
    with:
      path: |
        node_modules
      key: ${{ runner.os }}-npm-client-${{ hashFiles('package-lock.json') }}
      restore-keys: |
        ${{ runner.os }}-npm-client-

  - name: Install client npm dependencies
    run: |
      npm ci
    shell: bash

  - name: Cache Next.js build artifacts
    uses: actions/cache@v4
    with:
      # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
      path: |
        ~/.npm
        ${{ github.workspace }}/.next/cache
      # Generate a new cache whenever packages or source files change.
      key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      # If source files changed but packages didn't, rebuild from a prior cache.
      restore-keys: |
        ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  - name: Build Client Application
    run: |
      rm -rf .next  # Clean up previous build artifacts
      npm run build  # Build the client application
      pm2 restart "client" || pm2 start npm --name "client" -- start
      pm2 save
    shell: bash
    env:
      API_URL: ${{ secrets.API_URL }}
