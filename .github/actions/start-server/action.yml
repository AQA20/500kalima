name: "Start Server"
description: 'Starts the server and seeds the database'
runs:
  using: 'composite'
  steps:
    - name: Cache server npm dependencies
      uses: actions/cache@v4
      with:
        path: |
          server/node_modules
        key: ${{ runner.os }}-npm-server-${{ hashFiles('server/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-server-

    - name: Install server npm dependencies
      run: |
        cd ./server
        npm ci
      shell: bash

    - name: Seed Database and Start Server
      run: |
        cd ./server
        npm run migrate
        npm run seed 
        pm2 restart "server" || pm2 start npm --name "server" -- start
        pm2 save 
      shell: bash
      env:
        NODE_ENV: ${{ env.NODE_ENV }}
        DB_USERNAME: ${{ env.DB_USERNAME }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}
        DB_ROOT_PASSWORD: ${{ env.DB_ROOT_PASSWORD }}
        DB_NAME: ${{ env.DB_NAME }}
        DB_HOST: ${{ env.DB_HOST }}
        DB_PORT: ${{ env.DB_PORT }}
        MYSQL_SSL_CA: ${{ env.MYSQL_SSL_CA }}
        MYSQL_SSL_CERT: ${{ env.MYSQL_SSL_CERT }}
        MYSQL_SSL_KEY: ${{ env.MYSQL_SSL_KEY }}
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        AWS_FILE_BUCKET: ${{ env.AWS_FILE_BUCKET }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_S3_OBJECT_BASEURL: ${{ env.AWS_S3_OBJECT_BASEURL }}
        JWT_SECRET: ${{ env.JWT_SECRET }}
        SALT_ROUNDS: ${{ env.SALT_ROUNDS }}
        PORT: ${{ env.PORT }}
        SERVER_IP: ${{ env.SERVER_IP }}
        COOKIE_SECRET: ${{ env.COOKIE_SECRET }}
        CLOUDFRONT_BASE_URL: ${{ env.CLOUDFRONT_BASE_URL }}
        CLOUDFRONT_KEY_PAIR_ID: ${{ env.CLOUDFRONT_KEY_PAIR_ID }}
        CLOUDFRONT_PRIVATE_KEY: ${{ env.CLOUDFRONT_PRIVATE_KEY }}
